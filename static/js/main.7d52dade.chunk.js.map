{"version":3,"sources":["Images/Akhil Kalepu Suit.jpg","logo.svg","Components/AppNavbar/AppNavbar.js","Pages/About/About.js","Components/Wrapper/Wrapper.js","Components/ProjectCard/ProjectCard.js","Pages/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppNavbar","react_default","a","createElement","Navbar","color","light","expand","fixed","className","Container","NavbarBrand","id","href","Nav","navbar","NavItem","react_router_dom","exact","to","activeStyle","fontWeight","target","Component","About","src","AkhilKalepuSuit","alt","rel","Wrapper","props","children","ProjectCard","name","image","class","desc","link","button","Projects","state","projects","Components_Wrapper_Wrapper","this","map","card","Components_ProjectCard_ProjectCard","App","Components_AppNavbar_AppNavbar","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d52dade.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Akhil Kalepu Suit.a6374209.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport \"./AppNavbar.css\";\n\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from \"reactstrap\";\n\nimport {\n  Link,\n  NavLink\n} from \"react-router-dom\";\n\nclass AppNavbar extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Navbar color=\"white\" light expand=\"sm\" fixed={`top`} className=\"mb-5\">\n\n          <Container>\n\n            <NavbarBrand id=\"AkhilKalepu\" href=\"/\">Akhil Kalepu</NavbarBrand>\n\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink\n                  className=\"NavLinks\"\n                  exact to = \"/\"\n                  activeStyle = {\n                      {\n                        fontWeight: \"bold\",\n                        color: \"#ae0007\"\n                      }\n                    } >\n                    about me\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                  className=\"NavLinks\"\n                  exact to = \"/projects\"\n                  activeStyle = {\n                      {\n                        fontWeight: \"bold\",\n                        color: \"#ae0007\"\n                      }\n                    } >\n                    projects\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <a className=\"NavLinks\" href=\"https://github.com/theinfamousAK/\" target=\"_blank\">\n                    github\n                  </a>\n                </NavItem>\n                <NavItem>\n                  <a className=\"NavLinks\" href=\"https://www.linkedin.com/in/akhilkalepu/\" target=\"_blank\">\n                    linkedin\n                  </a>\n                </NavItem>\n\n              </Nav>\n\n          </Container>\n        </Navbar>\n\n      </div>\n    );\n  }\n}\n\nexport default AppNavbar;\n","import React, { Component } from 'react';\nimport AkhilKalepuSuit from '../../Images/Akhil Kalepu Suit.jpg';\nimport \"./About.css\";\n\nimport {\n  \n} from \"reactstrap\";\n\n\nclass About extends Component {\n\n  render() {\n    return (\n      <div className=\"About\">\n\n        <img className=\"col-lg-4 col-md-4 col-sm-6 col-xs-12\" id=\"about-img\" src={AkhilKalepuSuit} alt=\"akhil kalepu suit\"/>\n\n        <p className=\"col-lg-8 col-md-8 col-sm-6 col-xs-12\" id=\"about-p\">Hello! My name is Akhil Kalepu, I'm a full stack web developer living in Philadelphia, Pennsylvania. My skills include the following:</p>\n\n        <ul className=\"col-lg-8 col-md-8 col-sm-6 col-xs-12\" id=\"about-skills\">\n          <li>HTML, CSS and JavaScript</li>\n          <li>Node.js</li>\n          <li>React.js</li>\n          <li>Express.js</li>\n          <li>jQuery</li>\n          <li>SQL and NoSQL</li>\n          <li>RESTful APIs</li>\n          <li>Git and Heroku</li>\n        </ul>\n\n        <div className=\"col-lg-8 col-md-8 col-sm-6 col-xs-12\" id=\"about-p\">\n\n          <p>You can reach me at <a href=\"mailto:akhilkalepu@protonmail.com\">akhilkalepu@protonmail.com</a>.</p>\n          \n          <p>You can find my resume <a href=\"https://drive.google.com/file/d/1fKqMamTFEtmqzlPwgek1le_C6MqMXAaq/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./ProjectCard.css\";\n\n// import {\n//     Button,\n//     Card,\n//     CardImg,\n//     CardText,\n//     CardBody,\n//     CardLink,\n//     CardTitle,\n//     CardSubtitle\n// } from 'reactstrap';\n\nconst ProjectCard = props => (\n    <div className=\"card text-white bg-dark\">\n        <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n        </div>\n        <div class=\"card-body\">\n            <h5 className=\"card-title\">{props.name}</h5>\n            <p className=\"card-text\">{props.desc}</p>\n            <a className=\"btn btn-primary\" href={props.link} target=\"_blank\">{props.button}</a>\n        </div>\n    </div>\n);\n\n\nexport default ProjectCard;","import React, { Component } from 'react';\nimport projects from \"../../projects.json\";\nimport \"./Projects.css\";\n\nimport Wrapper from \"../../Components/Wrapper/Wrapper\";\nimport ProjectCard from \"../../Components/ProjectCard/ProjectCard\"\n\nimport {\n  \n} from \"reactstrap\";\n\n\nclass Projects extends Component {\n\n  state = {\n    projects\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        {this.state.projects.map(card => (\n            <ProjectCard\n              id={card.id}\n              name={card.name}\n              image={card.image}\n              link={card.link}\n              desc={card.desc}\n              button={card.button}\n            />\n          ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport AppNavbar from \"./Components/AppNavbar/AppNavbar\";\nimport About from \"./Pages/About/About\";\nimport Projects from \"./Pages/Projects/Projects\";\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Router>\n      \n        <div className=\"App\">\n\n            <AppNavbar/>\n\n            <div className=\"body\">\n              \n              <Route exact path=\"/\" component={About} />\n              <Route exact path=\"/projects\" component={Projects} />\n\n            </div>\n\n        </div>\n\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}